plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20-RC'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = 'com.ccnetmc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'glaremasters repo'
        url = 'https://repo.glaremasters.me/repository/towny/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    compileOnly 'com.palmergames.bukkit.towny:towny:0.98.3.10'
    compileOnly 'net.luckperms:api:5.4'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.github.stefvanschie.inventoryframework:IF:0.10.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
}

shadowJar {
    relocate 'com.github.stefvanschie.inventoryframework', 'com.ccnetmc.inventoryframework'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    filesMatching('config.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
